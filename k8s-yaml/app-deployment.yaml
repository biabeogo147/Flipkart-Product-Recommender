# -----------------------------
# Deployment: Run app + expose port 8000 (HTTP)
# -----------------------------
apiVersion: apps/v1
kind: Deployment

metadata:
  namespace: flipkart-recommender
  name: flipkart-recommender-deployment
  labels:
    app: flipkart-recommender-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      # The same as spec.selector.matchLabels
      app: flipkart-recommender-deployment
  template:
    metadata:
      labels:
        # The same as spec.selector.matchLabels
        app: flipkart-recommender-deployment
    spec:
      containers:
      - name: flipkart-recommender-container
        image: biabeogo147/flipkart-recommender-app:v1.0.0
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: flipkart-recommender-secrets
        env:
          # config.py
          - name: APP_PORT
            value: "8000"
          - name: MODEL_NAME
            value: "gemini-2.5-pro"
          - name: EMBEDDING_MODEL_NAME
            value: "sentence-transformers/all-MiniLM-L6-v2"
          - name: ASTRA_DB_KEYSPACE
            value: "flipkart_keyspace"
          - name: COLLECTION_NAME
            value: "mlops_study"
        ports:
          - name: http
            containerPort: 8000

        # Check if app is ready to serve traffic
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3

        # Health check to ensure app is alive
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 20
          periodSeconds: 20
          timeoutSeconds: 2
          failureThreshold: 3

        # Resource requests and limits
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "700m"
            memory: "2Gi"

---
# -----------------------------
# Service public for app (LoadBalancer 80 -> 8000)
# -----------------------------
apiVersion: v1
kind: Service
metadata:
  namespace: flipkart-recommender
  name: flipkart-recommender-service
  labels:
    app: flipkart-recommender-service

spec:
  type: ClusterIP
  selector:
    app: flipkart-recommender-deployment
  ports:
    - name: app
      protocol: TCP
      port: 80
      targetPort: http